package libelec;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class Jif_FraisDePort extends javax.swing.JInternalFrame {
    Statement stmtFraisDePort;
    Connexion maConnexion = new Connexion();
    
    public Jif_FraisDePort() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labFraisDePort = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabFraisDePort = new javax.swing.JTable();
        labValeurFraisDePort = new javax.swing.JLabel();
        txtValeurFraisDePort = new javax.swing.JTextField();
        butAjouter = new javax.swing.JButton();
        labIdFraisDePort = new javax.swing.JLabel();
        txtIdFraisDePort = new javax.swing.JTextField();
        labNouveauFraisDePort = new javax.swing.JLabel();
        txtNouveauFraisDePort = new javax.swing.JTextField();
        butModifier = new javax.swing.JButton();
        butLister = new javax.swing.JButton();

        setClosable(true);
        getContentPane().setLayout(null);

        labFraisDePort.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labFraisDePort.setForeground(new java.awt.Color(0, 0, 255));
        labFraisDePort.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labFraisDePort.setText("FRAIS DE PORT");
        getContentPane().add(labFraisDePort);
        labFraisDePort.setBounds(170, 10, 220, 30);

        tabFraisDePort.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabFraisDePort.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Frais de Port"
            }
        ));
        jScrollPane1.setViewportView(tabFraisDePort);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(290, 50, 230, 210);

        labValeurFraisDePort.setForeground(new java.awt.Color(0, 0, 255));
        labValeurFraisDePort.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labValeurFraisDePort.setText("Frais de Port");
        getContentPane().add(labValeurFraisDePort);
        labValeurFraisDePort.setBounds(40, 60, 90, 16);
        getContentPane().add(txtValeurFraisDePort);
        txtValeurFraisDePort.setBounds(170, 60, 70, 24);

        butAjouter.setIcon(new javax.swing.ImageIcon("D:\\librairie\\image\\add.png")); // NOI18N
        butAjouter.setText("AJOUTER");
        butAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAjouterActionPerformed(evt);
            }
        });
        getContentPane().add(butAjouter);
        butAjouter.setBounds(60, 100, 130, 48);

        labIdFraisDePort.setForeground(new java.awt.Color(0, 0, 255));
        labIdFraisDePort.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labIdFraisDePort.setText("Id Frais de Port");
        getContentPane().add(labIdFraisDePort);
        labIdFraisDePort.setBounds(40, 170, 100, 16);
        getContentPane().add(txtIdFraisDePort);
        txtIdFraisDePort.setBounds(190, 170, 70, 24);

        labNouveauFraisDePort.setForeground(new java.awt.Color(0, 0, 255));
        labNouveauFraisDePort.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labNouveauFraisDePort.setText("Nouveau Frais de Port");
        getContentPane().add(labNouveauFraisDePort);
        labNouveauFraisDePort.setBounds(40, 220, 140, 16);
        getContentPane().add(txtNouveauFraisDePort);
        txtNouveauFraisDePort.setBounds(190, 220, 70, 24);

        butModifier.setIcon(new javax.swing.ImageIcon("D:\\librairie\\image\\ModifierPT.png")); // NOI18N
        butModifier.setText("MODIFIER");
        butModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butModifierActionPerformed(evt);
            }
        });
        getContentPane().add(butModifier);
        butModifier.setBounds(60, 270, 130, 50);

        butLister.setIcon(new javax.swing.ImageIcon("D:\\librairie\\image\\list.png")); // NOI18N
        butLister.setText("LISTER");
        butLister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butListerActionPerformed(evt);
            }
        });
        getContentPane().add(butLister);
        butLister.setBounds(340, 270, 120, 50);

        setBounds(0, 0, 570, 380);
    }// </editor-fold>//GEN-END:initComponents

    private void butAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAjouterActionPerformed
        // TODO add your handling code here:
        String fraisPort = txtValeurFraisDePort.getText();
        
        if(fraisPort.isEmpty() ){
        JOptionPane.showMessageDialog(null, "Veuillez saisir une valeur");
    } else{
        
        String requette = "insert into fraisdeport (fraPrix) values ('"+fraisPort+"')";
        
        try{
            
            stmtFraisDePort = maConnexion.ObtenirConnexion().createStatement();
            stmtFraisDePort.executeUpdate(requette);
            JOptionPane.showMessageDialog(null, "Le Frais de Port est ajouté");
            
            //vider la table après l'ajout
            txtValeurFraisDePort.setText("");
            
        }
            catch (SQLException ex) {
            System.err.println("Erreur d'exécution de la requette:"+ ex.getErrorCode()+"/"+ ex.getMessage());
            }
        }
    }//GEN-LAST:event_butAjouterActionPerformed

    private void butModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butModifierActionPerformed
        // TODO add your handling code here:
        String idFraisPort = txtIdFraisDePort.getText();
        String nouveauFraisPort = txtNouveauFraisDePort.getText();
        
        if(idFraisPort.isEmpty() || nouveauFraisPort.isEmpty() ){
        JOptionPane.showMessageDialog(null, "Vous n'avez saisi aucune valeur");
    } else{
        
        String requette = "update fraisdeport set fraPrix = ? where fraId = ?";
        
        try{
            PreparedStatement pstmt = maConnexion.ObtenirConnexion().prepareStatement(requette);
            pstmt.setString(1, nouveauFraisPort);
            pstmt.setString(2, idFraisPort);
            pstmt.executeUpdate();
            pstmt.close();
            JOptionPane.showMessageDialog(null, "Le Status du Frais de Port est mis à jour");
            
            //vider la table après l'ajout
            txtIdFraisDePort.setText("");
            txtNouveauFraisDePort.setText("");
            
        }
        catch(SQLException ex) {
            System.err.println("Erreur d'exécution de la requette:"+ ex.getErrorCode()+"/"+ ex.getMessage());
            
            }
        }
    }//GEN-LAST:event_butModifierActionPerformed

    private void butListerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butListerActionPerformed
        // TODO add your handling code here:
        //creation d'un modele
        DefaultTableModel model = new DefaultTableModel();
        
         //les colonnes
        model.addColumn("Frais de Port");
        
        //la requette
        String requette = "select * from fraisdeport";
        
        try{
            stmtFraisDePort = maConnexion.ObtenirConnexion().createStatement();
            ResultSet result = stmtFraisDePort.executeQuery(requette);
            
            while(result.next()){
              model.addRow(new Object[]{result.getString("fraPrix")}); 
            }
            
        }
        catch (SQLException ex) {
            System.err.println("Erreur d'exécution de la requette:"+ ex.getErrorCode()+"/"+ ex.getMessage());
        }
        //On applique le modele à la JTable
        tabFraisDePort.setModel(model);
    }//GEN-LAST:event_butListerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAjouter;
    private javax.swing.JButton butLister;
    private javax.swing.JButton butModifier;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labFraisDePort;
    private javax.swing.JLabel labIdFraisDePort;
    private javax.swing.JLabel labNouveauFraisDePort;
    private javax.swing.JLabel labValeurFraisDePort;
    private javax.swing.JTable tabFraisDePort;
    private javax.swing.JTextField txtIdFraisDePort;
    private javax.swing.JTextField txtNouveauFraisDePort;
    private javax.swing.JTextField txtValeurFraisDePort;
    // End of variables declaration//GEN-END:variables
}
