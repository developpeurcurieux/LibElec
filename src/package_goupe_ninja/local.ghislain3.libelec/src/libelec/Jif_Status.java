package libelec;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Jif_Status extends javax.swing.JInternalFrame {
    Statement stmtStatut;
    Connexion maConnexion = new Connexion();
   
    public Jif_Status() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labStatus = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabLibelle = new javax.swing.JTable();
        labLibelle = new javax.swing.JLabel();
        txtLibelle = new javax.swing.JTextField();
        butAjouter = new javax.swing.JButton();
        labLibelleCorrige = new javax.swing.JLabel();
        txtLibelleCorrige = new javax.swing.JTextField();
        butModifier = new javax.swing.JButton();
        butLister = new javax.swing.JButton();
        labLibelleActuel = new javax.swing.JLabel();
        txtLibelleActuel = new javax.swing.JTextField();
        labType = new javax.swing.JLabel();
        txtType = new javax.swing.JTextField();

        setClosable(true);
        getContentPane().setLayout(null);

        labStatus.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labStatus.setForeground(new java.awt.Color(0, 0, 255));
        labStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labStatus.setText("STATUS");
        getContentPane().add(labStatus);
        labStatus.setBounds(210, 10, 140, 32);

        tabLibelle.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabLibelle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Libelle"
            }
        ));
        jScrollPane1.setViewportView(tabLibelle);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(290, 50, 180, 190);

        labLibelle.setForeground(new java.awt.Color(0, 0, 255));
        labLibelle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labLibelle.setText("Libelle");
        getContentPane().add(labLibelle);
        labLibelle.setBounds(60, 90, 50, 16);
        getContentPane().add(txtLibelle);
        txtLibelle.setBounds(140, 80, 70, 24);

        butAjouter.setIcon(new javax.swing.ImageIcon("D:\\librairie\\image\\add.png")); // NOI18N
        butAjouter.setText("AJOUTER");
        butAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAjouterActionPerformed(evt);
            }
        });
        getContentPane().add(butAjouter);
        butAjouter.setBounds(60, 120, 130, 50);

        labLibelleCorrige.setForeground(new java.awt.Color(0, 0, 255));
        labLibelleCorrige.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labLibelleCorrige.setText("Libelle Corrige");
        getContentPane().add(labLibelleCorrige);
        labLibelleCorrige.setBounds(50, 240, 100, 20);
        getContentPane().add(txtLibelleCorrige);
        txtLibelleCorrige.setBounds(160, 240, 70, 24);

        butModifier.setIcon(new javax.swing.ImageIcon("D:\\librairie\\image\\ModifierPT.png")); // NOI18N
        butModifier.setText("MODIFIER");
        butModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butModifierActionPerformed(evt);
            }
        });
        getContentPane().add(butModifier);
        butModifier.setBounds(70, 280, 130, 50);

        butLister.setIcon(new javax.swing.ImageIcon("D:\\librairie\\image\\list.png")); // NOI18N
        butLister.setText("LISTER");
        butLister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butListerActionPerformed(evt);
            }
        });
        getContentPane().add(butLister);
        butLister.setBounds(320, 250, 110, 50);

        labLibelleActuel.setForeground(new java.awt.Color(0, 0, 255));
        labLibelleActuel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labLibelleActuel.setText("Libelle Actuel");
        getContentPane().add(labLibelleActuel);
        labLibelleActuel.setBounds(50, 200, 90, 16);
        getContentPane().add(txtLibelleActuel);
        txtLibelleActuel.setBounds(160, 190, 70, 24);

        labType.setForeground(new java.awt.Color(0, 0, 255));
        labType.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labType.setText("Type");
        getContentPane().add(labType);
        labType.setBounds(60, 36, 50, 30);
        getContentPane().add(txtType);
        txtType.setBounds(140, 40, 70, 24);

        setBounds(0, 0, 663, 385);
    }// </editor-fold>//GEN-END:initComponents

    private void butAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAjouterActionPerformed
        // TODO add your handling code here:
        String type = txtType.getText();
        String libelle = txtLibelle.getText();
        
        if(type.isEmpty() || libelle.isEmpty() ){
        JOptionPane.showMessageDialog(null, "Veuillez saisir un type et un libelle");
    } else{
        
        String requette = "insert into statut (staType,staLibelle) values ('"+type+"','"+libelle+"')";
        
        try{
            
            stmtStatut = maConnexion.ObtenirConnexion().createStatement();
            stmtStatut.executeUpdate(requette);
            JOptionPane.showMessageDialog(null, "Le libellé est ajouté");
            
            //vider la table après l'ajout
            txtLibelle.setText("");
            
        }
            catch (SQLException ex) {
            System.err.println("Erreur d'exécution de la requette:"+ ex.getErrorCode()+"/"+ ex.getMessage());
            }
        }
    }//GEN-LAST:event_butAjouterActionPerformed

    private void butModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butModifierActionPerformed
        // TODO add your handling code here:
        String libelleActuel = txtLibelleActuel.getText();
        String libelleCorrige = txtLibelleCorrige.getText();
        
        if(libelleActuel.isEmpty() || libelleCorrige.isEmpty() ){
        JOptionPane.showMessageDialog(null, "Vous n'avez saisi aucun libellé");
    } else{
        
        String requette = "update statut set staLibelle = ? where staLibelle = ?";
        
        try{
            PreparedStatement pstmt = maConnexion.ObtenirConnexion().prepareStatement(requette);
            pstmt.setString(1, libelleCorrige);
            pstmt.setString(2, libelleActuel);
            pstmt.executeUpdate();
            pstmt.close();
            JOptionPane.showMessageDialog(null, "Le Status du Transporteur est mis à jour");
            
            //vider la table après l'ajout
            txtLibelleActuel.setText("");
            txtLibelleCorrige.setText("");
            
        }
        catch(SQLException ex) {
            System.err.println("Erreur d'exécution de la requette:"+ ex.getErrorCode()+"/"+ ex.getMessage());
            
            }
        }
    }//GEN-LAST:event_butModifierActionPerformed

    private void butListerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butListerActionPerformed
        // TODO add your handling code here:
        //creation d'un modele
        DefaultTableModel model = new DefaultTableModel();
        
         //les colonnes
        model.addColumn("Type");
        model.addColumn("Libelle");
        
        //la requette
        String requette = "select * from statut";
        
        try{
            stmtStatut = maConnexion.ObtenirConnexion().createStatement();
            ResultSet result = stmtStatut.executeQuery(requette);
            
            while(result.next()){
              model.addRow(new Object[]{result.getString("staType"),result.getString("staLibelle")}); 
            }
        }
        catch (SQLException ex) {
            System.err.println("Erreur d'exécution de la requette:"+ ex.getErrorCode()+"/"+ ex.getMessage());
        }
        //On applique le modele à la JTable
        tabLibelle.setModel(model);
    }//GEN-LAST:event_butListerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAjouter;
    private javax.swing.JButton butLister;
    private javax.swing.JButton butModifier;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labLibelle;
    private javax.swing.JLabel labLibelleActuel;
    private javax.swing.JLabel labLibelleCorrige;
    private javax.swing.JLabel labStatus;
    private javax.swing.JLabel labType;
    private javax.swing.JTable tabLibelle;
    private javax.swing.JTextField txtLibelle;
    private javax.swing.JTextField txtLibelleActuel;
    private javax.swing.JTextField txtLibelleCorrige;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables
}
